{{- $fullName := include "omejdn-server.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "omejdn-server.fullname" . }}
  labels:
    {{- include "omejdn-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "omejdn-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "omejdn-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "omejdn-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: init-fill-pvc
        image: alpine
        command: 
        - "sh"
        - "-c"
        args:
        - |
          ls /tmp/
          # if [ ! -f /tmp/users.yml ]; then
            echo "File users.yml not found in pvc!. Creating empty file"
            touch /tmp/users.yml
          # fi
          if [ -d /tmp/key.pem ]; then
            echo "Fix key is directory"
            rm -rf /tmp/key.pem
          fi
          if [ ! -f /tmp/key.pem ]; then
            echo "File key.pem not found in pvc!. Generating new key!"
            apk add openssl
            openssl genrsa -out /tmp/key.pem 1024
          fi
          if [ ! -f /tmp/clients.yml ]; then
            echo "File clients.yml not found in pvc! Creating a new one with default admin client"
            {{- if .Values.omejdn.createDefaultAdmin }}
            cp /tmp2/clients.yml /tmp/clients.yml
            {{- else }}
            touch /tmp/clients.yml
            {{- end }}
          fi
          if [ ! -d /tmp/keys ]; then
            echo "keys directory not found in pvc! Creating empty dit"
            mkdir /tmp/keys
          fi      
        volumeMounts:
        - name: config
          mountPath: /tmp/
          readOnly: false
        - mountPath: /tmp2/clients.yml
          name: clients-config
          subPath: clients.yml
        - mountPath: /opt/keys
          name: config
          subPath: keys
          readOnly: false
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: OMEJDN_JWT_AUD_OVERRIDE
            value: "idsc:IDS_CONNECTORS_ALL"
          - name: OMEJDN_IGNORE_ENV
            value: "true"
          {{- if .Values.omejdn.createDefaultAdmin }}
          - name: OMEJDN_ADMIN
            value: {{ .Values.omejdn.defaultAdminUser }}
          {{- end }}
          {{- range $key, $val := .Values.env.secret }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $fullName }}
                key: {{ $key }}
          {{- end}}
          {{- range $key, $val := .Values.env.config }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $fullName }}
                key: {{ $key }}
          {{- end}}
          ports:
            - name: http
              containerPort: 4567
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /.well-known/jwks.json
              port: http              
              scheme: HTTP
            failureThreshold: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /.well-known/jwks.json
              port: http              
              scheme: HTTP
            failureThreshold: 3
            periodSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /opt/config/omejdn.yml
            name: omejdn-config
            subPath: omejdn.yml
          - mountPath: {{ .Values.omejdn.serverKeyFolderPath }}/key.pem
            name: config
            subPath: key.pem
          - mountPath: /opt/config/users.yml
            name: config
            subPath: users.yml
            readOnly: false
          - mountPath: /opt/config/clients.yml
            name: config
            subPath: clients.yml
            readOnly: false
          - mountPath: /opt/keys
            name: config
            subPath: keys
            readOnly: false  
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: {{ include "omejdn-server.fullname" . }}
      {{- if .Values.omejdn.serverKey }}
      - name: server-key
        secret:
          secretName: {{ include "omejdn-server.fullname" . }}
          items:
          - key: key.pem
            path: key.pem
      {{- end }}
      - name: omejdn-config
        configMap:
          name: {{ include "omejdn-server.fullname" . }}
          items:
          - key: omejdn.yml
            path: omejdn.yml
      - name: clients-config
        configMap:
          name: {{ include "omejdn-server.fullname" . }}
          items:
          - key: clients.yml
            path: clients.yml
